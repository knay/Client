{% extends "::base.html.twig" %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('bundles/imerirnoyau/css/cssCaisse.css') }}"/> 
{% endblock %}

{% block title_page %}
Votre caisse
{% endblock %}

{% block title %}
ALBA - Votre caisse
{% endblock %}

{% block caisseBlock %}
menuSelected
{% endblock %}

{% block affichage %}
<div id="dialogSaisiCodeBarre" style="display: none" title="Saisie manuelle">
	<p>Veuillez saisir le code barre recherché.<br>
	<label for="saisie_code_barre">Code barre : </label>
	<input type="text" name="saisie_code_barre" id="saisie_code_barre">
	</p>
	<input type="button" value="Valider la saisie" class="bouton" id="valid_saisie">
</div>

<div id="dialogClient" style="display: none" title="Associer un client">
	<div id="chargement" style="display: none;">
		<h2><i class="fa fa-pulse fa-spinner"></i>Chargement...</h2>
	</div>
	<p>
		Chercher un client :
		<input type="text" id="critereRechClient">
		<input type="button" value="Rechercher" class="bouton" id="chercher_client">
		<table id="tabRechClient" class="tableau">
		</table>
	</p>
	<p>Ou<br>Ajouter un nouveau client : <input type="button" value="Nouveau client" class="bouton" id="ajout_client"></p>
	<div style="display: none;" id="divAjoutClient">
		<input type="button" value="Retour" class="bouton retour_client"><br>
		<form action="{{ path('imerir_validation_creation_client') }}" method="post">
			<table id="tableau_input">
	            <tr>
	                <td><label for="nom">Nom </label></td>
	                <td><input type="text" name="nom"/></td>
	                <input type="button" value="Ajouter" id="valideNewClient" class="bouton">
	            </tr>
	            <tr>
	                <td><label for="nom">Prenom </label></td>
	                <td><input type="text" name="prenom"/></td>
	            </tr>
	            <tr>
	                <td><label for="nom">Date de naissance (AAAA-MM-JJ) </label></td>
	                <td><input type="date" name="date_naissance" id="datepicker"/></td>
	            </tr>
	            <tr>
	                <td><label for="civilite">Civilité </label></td>
	                <td>
	                    <select name="civilite">
	                        <option value="Mlle.">Mlle.</option>
	                        <option value="Mme.">Mme.</option>
	                        <option value="M.">M.</option>
	                    </select>
	                </td>
	            </tr>
	            <tr>
	                <td><label for="email">Email </label></td>
	                <td><input type="text" name="email"/></td>
	            </tr>
	            <tr>
	                <td><label for="telephone_portable">Telephone portable </label></td>
	                <td><input type="text" name="telephone_portable"/></td>
	            </tr>
	            <tr>
	                <td><label for="ok_sms">Désire recevoir des SMS </label></td>
	                <td><input type="checkbox" name="ok_sms"/></td>
	            </tr>
	            <tr>
	                <td><label for="ok_mail">Désire recevoir des e-mails </label></td>
	                <td><input type="checkbox" name="ok_mail"/></td>
	            </tr>
	            <tr>
	                <td><label for="notes">Notes </label></td>
	                <td><textarea name="notes"></textarea></td>
	            </tr>
	            <tr><td><label for="lst_adresse">Liste des adresses : </label></td></tr>
	        </table>
	
	        {% set nbAdresse = 0 %}
	        {#champs pour l'adresse#}
	        <div id="lst_adresse">
	            <table class="tableau" id="tableau">
	                <tr>
	                    <th></th>
	                    <th class="titre_lst">Pays</th>
	                    <th class="titre_lst">Ville</th>
	                    <th class="titre_lst">Code postal</th>
	                    <th class="titre_lst">N° voie</th>
	                    <th class="titre_lst">Voie</th>
	                    <th class="titre_lst">N° appartement</th>
	                    <th class="titre_lst">Téléphone fixe</th>
	                </tr>
	                {% if detail_adresse.adresse is defined %}
	                    {% for i in detail_adresse.adresse %}
	                        <tr>
	                            <td>
	                                <i class="fa fa-minus-square supprimer"></i>
	                            </td>
	                            <td>
	                                <input type="text" name="adresse{{ nbAdresse }}" value="{{ i.valeurAdresse }}"/>
	                            </td>
	                        </tr>
	                        {% set nbAdresse = nbAdresse + 1 %}
	                    {% endfor %}
	                {% endif %}
	                <tr class="last">
	                    <td><i class="fa fa-plus-square ajout ajouter"></i></td>
	                    <td><input type="text" name="pays{{ nbAdresse }}"/></td>
	                    <td><input type="text" name="ville{{ nbAdresse }}"/></td>
	                    <td><input type="text" name="code_postal{{ nbAdresse }}"/></td>
	                    <td><input type="text" name="num_voie{{ nbAdresse }}"/></td>
	                    <td><input type="text" name="voie{{ nbAdresse }}"/></td>
	                    <td><input type="text" name="num_appartement{{ nbAdresse }}"/></td>
	                    <td><input type="text" name="telephone_fixe{{ nbAdresse }}"/></td>
	                </tr>
	            </table>
	        </div>
	    </form>
	</div>
</div>

<fieldset id="fieldset_ajout">
	<legend id="titre_fieldset" >Votre caisse</legend>
	{% if erreur is defined %}{% if erreur != "" %}<div id="erreur">{{ erreur }}</div>{% endif %}{% endif %}
	<div id="contenneur_caisse" style="display:none;">
		<div id="divBoutonOption">
			<input type="button" class="bouton saisie_manuelle" value="Faire une saisie manuelle de code barre">
			<input type="button" class="bouton saisie_client" value="Associer un client à cet achat">
		</div>
		<form action="{{ path('imerir_noyau_caisse_save') }}" method="post" id="formulaireCaisse">
			<div id="enTete">
				<input type="hidden" id="inputIdClient" name="idClient">
				<span id="spanNomClient">
					<i class="fa fa-exclamation-triangle" style="color: red;"></i>
					Aucun client n'est associé à cet achat pour le moment
				</span> 
				<span id="dateSpan">{{ "now"|date("d/m/Y") }}</span>
			</div>
			<h2>LISTE DES ARTICLES</h2>
			<div id="chargement_caisse" >
				&nbsp;
				<span style="display: none;"><i class="fa fa-pulse fa-spinner"></i>Chargement...</span>
			</div>
			<table id="tableauCaisse" class="tableau">
				<tr>
					<th></th>
					<th>Code article</th>
					<th>Quantité</th>
					<th>Prix unitaire</th>
					<th>Promotion</th>
					<th>Total</th>
				</tr>
				<tr style="display:none">
					<td><i class="fa fa-minus-square supprimer"></i></td>
					<td class="tdCodeBarre">
						<input type="text" name="code_0" class="code_barre">
					</td>
					<td class="tdQuantite">
						<input type="number" name="quantite_0" min="1" value="1" class="quantite">
						<i class="fa fa-minus-square moinsQuantite"></i>
						<i class="fa fa-plus-square plusQuantite"></i>
					</td>
					<td class="tdPrix">
					</td>
					<td class="tdPromo">
						<input type="number" name="promo_0" min="0" max="100" value="0" class="promo">%
					</td>
					<td class="tdTotal">
						0 €
					</td>
				</tr>
			</table>
			<h2>TOTAL À PAYER : <input type="submit" id="btnCaisse" value="Valider la facture"><span id="prixTotal">0.0 €</span></h2>
		</form>
	</div>
	<!-- Message s'affichant uniquement au chargement de la page, dès qu'on scan un item on l'enlève -->
	<div id="message_accueil">
		<div>
			<h2>Scanner un article pour commencer</h2>
			Ou<br>
			<input type="button" value="Faire une saisie manuelle" class="bouton saisie_manuelle">
		</div>
	</div>
</fieldset>
{% endblock %}

{% block javascripts %}
<script>
var tableau = $('#tableauCaisse'); //< Le tableau représentant les éléments scanné à la caisse
var nbCodeBarre = 0; //< Le nombre d'article scanné. Utilisé pour envoyé toutes les données en POST sans qu'elles aient le même nom

/**
 * Permet de réagir lorsque l'on valide la vente.
 * Va faire quelques vérifications pour renseigner à l'utilisateur si des problèmes sont détectés.
 */
$("#formulaireCaisse").submit(function (event) {
	event.preventDefault(); // On empeche le comportement par défaut le temps de vérifier
	
	var idClient = $("#inputIdClient").val(); // On récupé l'id client pour savoir s'il est renseigné
	var message = "Confirmer la vente ?"; // Le message de base du message de confirmation
	var prix = tableau.find(".tdPrix:visible"); // On récup tous les prix pour savoir si certains n'en on pas 
	var sansPrix = false; // Cette variable va nous permettre de savoir si certain articles n'ont pas de prix

	prix.each(function () {
		if ($(this).html().trim() == "") {
			sansPrix = true; // Si un article n'a pas de prix
		}
	});

	if (true === sansPrix) 
		message = "Attention : certain articles n'ont pas de prix renseigné.\n" + message;
	
	if (idClient === "-1" || idClient === "") 
		message = "Attention : cette vente n'est affectée à aucun client.\n" + message;

	// On affiche le message et on valide ou pas
	if (confirm(message) === true) 
		$(this).submit();
	else 
		return false;
});

/**
 * Permet d'effacer une ligne d'inventaire en cas d'erreur de l'utilisateur.
 * Cette fonction est appéelé lorsque l'on clic sur le bouton moins.
 */
function supprimerLigne () {
	if (confirm("Voulez-vous vraiment supprimer cet article ?") === true) {
		$(this).parent().parent().remove();
		calculerPrixTotal();
		if (tableau.children("tbody").children("tr").length == 2) {
			$("#contenneur_caisse").hide();
			$("#message_accueil").show();
		}
	}
}

/**
 * Fonction réagissant lors du clic sur le bouton - à côté de la quantité de produit.
 * Diminue la quantité de 1 en faisait attention de ne pas descendre en dessous de 0.
 */
function moinsQuantite() {
	var input = $(this).parent().find(".quantite");
	var qt = parseInt(input.val()) - 1;
	if(qt < 0)
		qt = 0;

	input.val(qt);
	calculerPrixTotal();
}

/**
 * FOnction réagissant lors du clic sur le bouton + à côté de la quantité produit.
 * Augmente la quantité produit de 1.
 */
function plusQuantite() {
	var input = $(this).parent().find(".quantite");
	var qt = parseInt(input.val()) + 1;

	input.val(qt);
	calculerPrixTotal();
}

/**
 * Fonction permettant de réagir lorsque l'utilisateur clique sur le bouton valider du formulaire
 * de création client.
 * Cette fonction utilise la page de /creation/validation du bundle contact pour enregistrer les données.
 */
$("#valideNewClient").click(function () {
	var form = $("#divAjoutClient").find("form");
	var path = form.attr("action");
	var method = form.attr("method");
	var queryString = form.serialize();

	$("#chargement").show();
	$("#divAjoutClient").hide();
	$("#dialogClient").children("p").hide();
	$("#tabRechClient").hide();

	$.ajax({
		   url: path,
		   data: queryString,
		   success: function(data) {
			   var civilite = form.find('select[name="civilite"]').val();
			   var nom = form.find('input[name="nom"]').val();
			   var prenom = form.find('input[name="prenom"]').val();

			   $("#chargement").hide();
			   $("#divAjoutClient").hide();
			   $("#dialogClient").children("p").show();
			   $("#tabRechClient").show();
		   },
		   type: method
	});
});

/**
 * Permet de réagir lorsque l'on clic sur le bouton rechercher un client. 
 */
$("#chercher_client").click(function () {
	var valCritere = $("#critereRechClient").val();

	$("#chargement").show();
	$("#divAjoutClient").hide();
	$("#dialogClient").children("p").hide();
	$("#tabRechClient").hide();

	$.ajax({
		   url: '{{ path('imerir_noyau_ajax_getContactFromEverything_caisse') }}',
		   data: {
		      critere: valCritere
		   },
		   success: function(data) {
			   if (typeof data.erreur !== 'undefined') {
				   alert("Une erreur est survenue lors de la recherche : \n"+data.erreur);
				   $("#chargement").hide();
				   $("#divAjoutClient").hide();
				   $("#dialogClient").children("p").show();
				   $("#tabRechClient").show();
				   return;
			   }
			   
			   var objJson = JSON.parse(data); // On parse les datas et on trouve le produit correspondant à l'article dans la liste.
			   $("#tabRechClient").html("");
			   for(i in objJson) {
				   var nom = "";
				   var id = 0;
				   var prenom = "";
				   var date_naissance = "";
				   var civilite = "";
				   var email = "";
				   var telephone_portable = "";

				   if (typeof objJson[i].nom != 'undefined')
					   nom = objJson[i].nom;
				   if (typeof objJson[i].id != 'undefined')
					   id = objJson[i].id;
				   if (typeof objJson[i].prenom != 'undefined')
					   prenom = objJson[i].prenom;
				   if (typeof objJson[i].date_naissance != 'undefined')
					   date_naissance = objJson[i].date_naissance;
				   if (typeof objJson[i].civilite != 'undefined')
					   civilite = objJson[i].civilite;
				   if (typeof objJson[i].email != 'undefined')
					   email = objJson[i].email;
				   if (typeof objJson[i].telephone_portable != 'undefined')
					   telephone_portable = objJson[i].telephone_portable;
				   
				   $("#tabRechClient").append("<tr>"
						   + "<td class=\"tdNomClient\"><input type=\"hidden\" value=\""+escape(id)+"\" class=\"idClient\">"+escape(nom)+"</td>"
						   + "<td class=\"tdPrenomClient\">"+escape(prenom)+"</td>"
						   + "<td>"+escape(date_naissance)+"</td>"
						   + "<td class=\"tdCiviliteClient\">"+escape(civilite)+"</td>"
						   + "<td>"+escape(email)+"</td>"
						   + "<td>"+escape(telephone_portable)+"</td>"
						   + "</tr>");

				   $("#chargement").hide();
				   $("#divAjoutClient").hide();
				   $("#dialogClient").children("p").show();
				   $("#tabRechClient").show();
			   }
			   $("#tabRechClient").find("tr").click(clickTrRechClient);
		   },
		   type: 'POST'
	});
});

$('.moinsQuantite').click(moinsQuantite); // On bind le clic sur le bouton moins de la quantite avec la fonction
$('.plusQuantite').click(plusQuantite); // On bind le clic sur le bouton plus de la quantite avec la fonction
$('#ajout_client').click(function () {
	$("#divAjoutClient").show();
	$("#dialogClient").children("p").hide();
	$("#tabRechClient").hide();
});
$(".retour_client").click(function () {
	$("#divAjoutClient").hide();
	$("#dialogClient").children("p").show();
	$("#tabRechClient").show();
});

/**
 * Permet de réagir au clic sur le tableau de recherche de client.
 */
function clickTrRechClient() {
	$("#inputIdClient").val($(this).find(".idClient").val());
	$("#spanNomClient").html($(this).find(".tdCiviliteClient").html() + " " + 
						     $(this).find(".tdPrenomClient").html() + " " + $(this).find(".tdNomClient").html());

	$("#dialogClient").dialog("close");
}

/**
 * Fonction permettant de calculer le prix total d'une ligne.
 */
function calculerPrixLigne(ligne) {
	var prix = ligne.children('.tdPrix').html();
	var promo = ligne.children('td').children('.promo').val();
	var quantite = ligne.children('td').children('.quantite').val();

	prixTotal = ((prix - (prix*promo/100))*quantite); // Calcul du prix total

	ligne.children('.tdTotal').html(""+prixTotal.toFixed(2)+" €");
}

/**
 * Fonction permettant de calculer le prix total à partir des prix unitaires, 
 * des promos et de la quantité de chaque produit scanné.
 */
function calculerPrixTotal() {
	var lignes = $(tableau).children("tbody").children("tr");
	var prixTotal = 0;

	lignes.each(function(e) {
		if (e == 0) // Si c'est la première ligne on en tien pas compte (c'est le header du tableau)
			return;

		var prix = $(this).children('.tdPrix').html();
		var promo = $(this).children('td').children('.promo').val();
		var quantite = $(this).children('td').children('.quantite').val();
		var prixLigne = ((prix - (prix*promo/100))*quantite); // Calcul du prix de la ligne

		$(this).children('.tdTotal').html(''+prixLigne.toFixed(2)+" €");

		prixTotal+=prixLigne; // Calcul du prix total
	});

	$("#prixTotal").html(prixTotal.toFixed(2)+" €");
}

/** 
 * Fonction ouvrant une fenetre de saisie manuelle de code barre
 */
$(".saisie_manuelle").click(function () {
	var dial = $("#dialogSaisiCodeBarre");
	dial.dialog({
	    modal: true,
	    width: "50%",
		height: "300",
		resizable: false,
		draggable: false
	});
});

/** 
 * Fonction ouvrant une fenetre de saisie manuelle de client
 */
$(".saisie_client").click(function () {
	var dial = $("#dialogClient");
	dial.dialog({
	    modal: true,
	    width: "90%",
		height: "500",
		resizable: false,
		draggable: false
	});

	$("#divAjoutClient").hide();
	$("#dialogClient").children("p").show();
});

/**
 * Permet de valider la saisie manuelle de code barre.
 * Une fois que le code barre a bien été saisi par l'utilisateur, on met la valeur de ce qui a été saisie 
 * dans l'input où la douchette va normalement écrire, puis on lance la recherche.
 */
$("#valid_saisie").click(function () {
	var input = $("#saisie_code_barre");
	var valeurSaisie = input.val();
	if (valeurSaisie === "") {
		input.focus();
		return;
	}

	var inputCodeBarre = $(".code_barre").last();
	inputCodeBarre.val(valeurSaisie); // On fait comme si on avait fait avec la douchette, on met dans l'input qui va bien

	validerCodeBarre(true); // On dit qu'on a un code barre à lire	

	$("#dialogSaisiCodeBarre").dialog("close");
});

/**
 * Fonction appelé automatique au chargement de la page.
 * Elle permet de vider tout les champs texte qui, sinon, pourrait avoir 
 * des trâces en cas de refresh de la page web.
 */
$(document).ready(function (e) {
	$('input[type="text"]').val('');
	$('.tdQuantite').children("input").val('1');
	$('.tdPromo').children("input").val('0');
});

/**
 * Fonction clef du scan, permet de detecter lorsque l'on presse une touche,
 * la douchette agissant comme un clavier, cette methode est appelé lors d'un 
 * scan de produit.
 */
$(document).keypress(function(e) {
	if ($("#saisie_code_barre").is(":visible") === true || $("#dialogClient").is(":visible") === true) // Si on est sur la dialog on ne prend plus en compte la douchette 
		return true;
	
	// Si l'utilisateur à le curseur sur un champ texte, c'est qu'il veut écrire et ce 
	// n'est plus la douchette qui est maître
	if ($('.prix:focus').length || $('.promo:focus').length || $('.quantite:focus').length) 
		return true;
	
	var input = $(".code_barre").last(); // On récupère l'input dans lequel on va venir écrire le code barre
	var elementfocus = $('input:focus').blur(); // On défocus tout autre input, il ne devrait y avoir que les trois du dessus
	
	$("#inputSubmit").attr("disabled", true); // On grise le boutton submit le temps du traitement

	if (input.val().length == 1) { // Si c'est le premier caractère taper on lance un timeout (pour le temps de lecture d'un code barre)
		setTimeout (validerCodeBarre, 220);
	}

    input.val(input.val()+ String.fromCharCode(e.which));
    return false; // false, pour empecher d'écrire dans un champs si jamais le curseur est tout de même mal placé
});

/**
 * Fonction permettant de valider la lecture d'un code barre.
 * Une fois le code barre lue, elle va chercher toutes les informations concernant l'article,
 * depuis le SOAP. Puis on recalcule tout les montants.
 * @param saisieManuelle Précise s'il s'agit d'une saisie manuelle ou non. Si c'est une
 *                       saisie manuelle on ne tient pas compte de la longueur du code barre.
 */
function validerCodeBarre(saisieManuelle) {
	var existeDeja = false; // Permettra de savoir si on a déjà scané cet article ou non
	var lignes = tableau.children("tbody").children("tr");
	var input = $(".code_barre").last(); // On récupère l'input dans lequel on va venir lire le code barre

	if (saisieManuelle !== true && input.val().length < 10) {
		input.val('');
		return true;
	} 

	nbCodeBarre++;

	var ligneCur = lignes.last(); // On récupère la ligne de tableau sur laquelle on va travailler

	if ($("#contenneur_caisse").is(":visible") == false) { // On cache le message d'accueil
		$("#contenneur_caisse").show();
		$("#message_accueil").hide();
	}
	
	$("#chargement_caisse").children("span").show();

	lignes.each(function (e) { // On regarde dans toutes les lignes pour savoir si l'article à déjà été scanné
		if (e === lignes.length - 1) // si c'est la ligne en cours, aucun interet on arrete la boucle
			return; 

		// Si c'est la même valeur de code barre c'est que l'article à déjà été scanné, on incrémente la quantité
		if ($(this).find(".code_barre").val() == ligneCur.find('.code_barre').val()) {
			existeDeja = true;
			var qt = parseInt($(this).children('td').children(".quantite").val())+1;
			$(this).children('td').children(".quantite").val(""+qt);
			ligneCur.find(".code_barre").val('');
			calculerPrixTotal(); // On recalcul le prix total, narmol
			calculerPrixLigne(ligneCur);
			$("#chargement_caisse").children("span").hide();
		}
	});
	
	if (existeDeja === false) { // Si on a pas trouvé d'article correspondant, il faut l'ajouter
		var ligne = ligneCur.clone(); // On prépare le clone de la ligne pour l'ajouter au tableau
		var cellule = ligne.children('td');
		cellule.children(".selectProduit").attr('name', 'produit_'+nbCodeBarre);
		cellule.children(".quantite").attr('name', 'quantite_'+nbCodeBarre);
		cellule.children(".promo").attr('name', 'promo_'+nbCodeBarre);
		cellule.find(".code_barre").attr('name', 'code_'+nbCodeBarre);
		ligne.find(".code_barre").val(''); // C'est un nouveau produit, plus de code barre

		ligne.hide(); // On le cache, ça sera la prochaine ligne qui sera afficher au prochain scan
		ligneCur.show(); // On affiche l'article qu'on vient de scanner
		tableau.append(ligne);
	

		$.ajax({
			   url: '{{ path('imerir_noyau_ajax_getPrixFromCodeBarre_caisse') }}',
			   data: {
			      codeBarre: ligneCur.find('.code_barre').val()
			   },
			   success: function(data) {
				   var prix = data.montant_client;
				   ligneCur.children('.tdPrix').html(prix);
				   calculerPrixTotal(); // On recalcul le prix total, narmol
				   calculerPrixLigne(ligneCur);

				   $("#chargement_caisse").children("span").hide();
			   },
			   type: 'POST'
		});

		$('.moinsQuantite').unbind("click");
		$('.plusQuantite').unbind("click");
		$('.moinsQuantite').click(moinsQuantite); // On bind le clic sur le bouton moins de la quantite avec la fonction
		$('.plusQuantite').click(plusQuantite); // On bind le clic sur le bouton plus de la quantite avec la fonction
	}

	$('input').change(calculerPrixTotal);
	$('.supprimer').click(supprimerLigne); // On bind le clic sur bouton - avec la fonction de suppression
}
</script>
{% endblock %}