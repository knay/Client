{% extends "::baseAffichage.html.twig" %}

{% block title_ajout %}
Faire un inventaire
{% endblock %}

{% block title_page %}
Inventaire
{% endblock %}

{% block title %}
ALBA - Inventaire
{% endblock %}

{% block produitBlock %}
menuSelected
{% endblock %}

{% block stylesheets %}
	 <link rel="stylesheet" href="{{ asset('../vendor/components/jqueryui/themes/smoothness/jquery-ui.css') }}">
     <link rel="stylesheet" href="{{ asset('bundles/imerirnoyau/css/cssCaisse.css') }}"/> 
{% endblock %}

{% block ajout %}
<div id="dialog" title="Les clients"></div>

<form action="{{ path('imerir_stock_inventaire_save') }}" method="post">
	<div id="contenneur_inventaire" style="display:none;">
		<table id="table_code_barre" class="tableau">
			<tr>
				<th></th>
				<th>Produit</th>
				<th>Code barre</th>
				<th>Quantité</th>
				<th>Caractéristiques</th>
			</tr>
			<tr style="display: none">
				<td><i class="fa fa-minus-square supprimer"></i></td>
				<td>
					<select name="produit_0" class="selectProduit">
						{% for j in produit %}
							<option>{{ j.p }}</option>
						{% endfor %}
					</select>
					<i class="fa fa-plus-square ajout ajoutProduit"></i>
				</td>
				<td><input type="text" name="code_0" class="valeurCodeBarre" readonly="readonly"></td>
				<td><input type="number" name="quantite_0" min="1" value="1" class="quantite"></td>
				<td>
					{% set nbCarac = 0 %}
					
					{# On affiche tous les attributs dans des selects, et toutes les valeurs 
					   liées à cet attribut dans les options de ce select #}
					{% for j in attributs %} 
						<label for="caract_0_{{ nbCarac }}">{{ j.nom }} : </label>
						<select name="caract_0_{{ nbCarac }}" class="valAttribut">
						{% for i in j.valeurs %}
							<option value="{{ j.nom }}_{{ i }}">{{ i }}</option>
						{% endfor %}
						</select><br/>
						{% set nbCarac = nbCarac + 1 %}
					{% endfor %}
				</td>
			</tr>
		</table>
		<input type="submit" value="Valider">
	</div>
	
	<!-- Message s'affichant uniquement au chargement de la page, dès qu'on scan un item on l'enlève -->
	<div id="message_accueil">
		<h2>SCANNER UN ARTICLE POUR COMMENCER</h2>
	</div>
	
	<div id="chargement" style="display: none;">
		<h2><i class="fa fa-pulse fa-spinner"></i>Chargement...</h2>
	</div>
</form>
{% endblock %}
    
{% block table %}
<tr><th>Stock</th></tr>
<tr><td>ici on affichera le stock actuel</td></tr>
{% endblock %}

{% block javascripts %}
<script>
var nbCodeBarre = 0;  //< Le nombre d'article scanné. Utilisé pour envoyé toutes les données en POST sans qu'elles aient le même nom
var tableau = $("#table_code_barre"); //< Le tableau représentant les éléments scanné à la caisse
var valeurCaracteristique = ''; //< Cette variable est utilisé pour des problèmes de concurences avec AJAX... Elle permet de stocké des donnée le temps qu'une requete soit passée

/**
 * Fonction permettant d'ajouter un produit. 
 */
function modifierAttribut() {
	var ligne = $(this).parent().parent().parent(); // La ligne sur laquelle on a cliqué
	var idAttr = $(this).parent().find('.id_attribut').val();

	$("#dialog").dialog({
        modal: true,
        width: "90%",
    	height: "400",
    	resizable: false,
    	draggable: false
    });

    $("#dialog").html('<div id="chargement">'
		+'<h2><i class="fa fa-pulse fa-spinner"></i>Chargement...</h2>'
	    +'</div>');

    $("#dialog").load('{{ path('imerir_produit_modif_attributs') }}', {id : idAttr }, function () {
        var dial = $("#dialog");
        dial.find("#div_menu").remove();
        dial.find("#header").remove();
        dial.find("#title_page").remove();
        dial.find("#fieldset_recherche").remove();
        dial.find("#affichage").css("left", "0");

        $( "#menu" ).children( "li" ).unbind("click");
        
        /**
         * Fonction permettant de traiter le clic sur le bouton submit de la fenetre, si on submit, on envoie pas 
         * le formulaire normalement, on le passe par AJAX.
         */
        dial.find('form').submit (function (event){ 
        	event.preventDefault();
        	
            var valProduit = dial.find('input[name=nomProduit]').val();
            var valLigneProduit = dial.find('select[name=nomLigneProduit]').val();

            $("#dialog").html('<div id="chargement">'
            		+'<h2><i class="fa fa-pulse fa-spinner"></i>Chargement...</h2>'
            		+'</div>');
            var datas = $(this).serialize();
        	$.ajax({
     		   url: '{{ path('imerir_produit_save_attributs') }}',
     		   data: datas,
     		   success: function(data) {
     			  var select = ligne.find('.selectProduit');
     			  dial.dialog("close");
     			  ligne.effect( "highlight", {}, "3000" );
     			  select.trigger('change');
     			  $('.ajoutProduit').unbind('click');
     			  $('.modifierAttribut').unbind('click');
     			  $('.ajoutProduit').unbind('click');
     			  $('.modifierAttribut').unbind('click');
     		   },
     		   type: 'POST'
     		});
     		return false;
        });
    });
}

/**
 * Fonction permettant d'ajouter un produit. 
 */
function ajoutProduit() {
	var ligne = $(this).parent().parent(); // La ligne sur laquelle on a cliqué

	$("#dialog").dialog({
        modal: true,
        width: "90%",
    	height: "400",
    	resizable: false,
    	draggable: false
    });

    $("#dialog").html('<div id="chargement">'
		+'<h2><i class="fa fa-pulse fa-spinner"></i>Chargement...</h2>'
	    +'</div>');
    
    $("#dialog").load('{{ path('imerir_produit_creation_produit') }}', function () {
    	var dial = $("#dialog");
        dial.find("#div_menu").remove();
        dial.find("#header").remove();
        dial.find("#title_page").remove();
        dial.find("#fieldset_recherche").remove();
        dial.find("#affichage").css("left", "0");

        $( "#menu" ).children( "li" ).unbind("click");
        
        /**
         * Fonction permettant de traiter le clic sur le bouton submit de la fenetre, si on submit, on envoie pas 
         * le formulaire normalement, on le passe par AJAX.
         */
        dial.find('form').submit (function (event){ 
        	event.preventDefault();
        	
            var valProduit = dial.find('input[name=nomProduit]').val();
            var valLigneProduit = dial.find('select[name=nomLigneProduit]').val();

            $("#dialog").html('<div id="chargement">'
            		+'<h2><i class="fa fa-pulse fa-spinner"></i>Chargement...</h2>'
            		+'</div>');
        	$.ajax({
     		   url: '{{ path('imerir_produit_validation_creation_produit') }}',
     		   data: {
     			  nomProduit: valProduit,
     			  nomLigneProduit: valLigneProduit
     		   },
     		   success: function(data) {
     			  var select = ligne.find('.selectProduit');
     			  select.html(select.html()+'<option value="'+valProduit+'" selected>'+valProduit+'</option>');
     			  dial.dialog("close");
     			  ligne.effect( "highlight", {}, "3000" );
     			  select.trigger('change');
     			  $('.ajoutProduit').unbind('click');
     			  $('.modifierAttribut').unbind('click');
     			  $('.ajoutProduit').unbind('click');
     			  $('.modifierAttribut').unbind('click');
     		   },
     		   type: 'POST'
     		});
     		return false;
        });
    });
}

/**
 * Permet d'effacer une ligne d'inventaire en cas d'erreur de l'utilisateur.
 * Cette fonction est appéelé lorsque l'on clic sur le bouton moins.
 */
function supprimerLigne () {
	$(this).parent().parent().remove();
	if (tableau.children("tbody").children("tr").length == 2) {
		$("#contenneur_inventaire").hide();
		$("#message_accueil").show();
	}
}

$('.supprimer').click(supprimerLigne); // On bind le clic sur bouton - avec la fonction de suppression
$('.ajoutProduit').click(ajoutProduit); // On bind le clic sur bouton - avec la fonction de suppression
$('.modifierAttribut').click(modifierAttribut); // On bind le clic sur bouton modifer avec la modification d'attibut


/**
 * Fonction appelé automatique au chargement de la page.
 * Elle permet de vider tout les champs texte qui, sinon, pourrait avoir 
 * des trâces en cas de refresh de la page web.
 */
$(document).ready(function (e) {
	$('input[type="text"]').val('');
});

/**
 * Fonction clef du scan, permet de detecter lorsque l'on presse une touche,
 * la douchette agissant comme un clavier, cette methode est appelé lors d'un 
 * scan de produit.
 *
 * TODO : permettre d'écrire dans un champ type int.... la base quoi..
 * TODO : s'inspiré de la caisse pour faire un truc plus propre au niveau de l'affichage d'un champs qui sera vide au depart..
 */
$(document).keypress(function(e) {
	try { // Si la fenetre n'a pas encore été init il faut catché l'érreur produite, même si on l'a traite pas
		if ($("#dialog").dialog("isOpen") === true) // Si on est sur la dialog on ne prend plus en compte la douchette 
			return true;
	} catch(e) {
	}
	
	// Si l'utilisateur à le curseur sur un champ texte, c'est qu'il veut écrire et ce 
	// n'est plus la douchette qui est maître
	if ($('.selectProduit:focus').length || $('.quantite:focus').length || $(".valAttribut:focus").length) 
		return true;
		
	var input = $(".valeurCodeBarre").last(); // On récupère l'input dans lequel on va venir écrire le code barre
	var elementfocus = $('input:focus').blur(); // On défocus les input pours pas écrire dessus avec la douchette

	$("#inputSubmit").attr("disabled", true);  // On grise le boutton submit le temps du traitement

	if (input.val().length == 1) { // Si c'est le premier caractère taper on lance un timeout (pour le temps de lecture d'un code barre)
		setTimeout (function () {
			var ligne = tableau.children("tbody").children("tr").last().clone(); // On prépare le clone de la ligne pour l'ajouter au tableau
			var cellule = ligne.children('td');
			var nbCaract = 0;
			var ligneCur = tableau.children("tbody").children("tr").last(); // On récupère la ligne de tableau sur laquelle on va travailler
			var existeDeja = false; // Permettra de savoir si on a déjà scané cet article ou non
			var lignes = tableau.find("tr");

			if (input.val().length < 10) {
				input.val('');
				return true;
			}

			$("#chargement").show();
			$("#contenneur_inventaire").hide();
			$("#message_accueil").hide();

			lignes.each(function (e) { // On regarde dans toutes les lignes pour savoir si l'article à déjà été scanné
				if (e === lignes.length - 1) // si c'est la ligne en cours, aucun interet on arrete la boucle
					return; 

				// Si c'est la même valeur de code barre c'est que l'article à déjà été scanné, on incrémente la quantité
				if ($(this).find(".valeurCodeBarre").val() == ligneCur.find('.valeurCodeBarre').val()) {
					existeDeja = true;
					var qt = parseInt($(this).children('td').children(".quantite").val())+1;
					$(this).children('td').children(".quantite").val(""+qt);
					ligneCur.find(".valeurCodeBarre").val('');
					$("#chargement_caisse").children("span").hide();
				}
			});
			if (existeDeja === false) {
				nbCodeBarre++;
				
				cellule.children(".selectProduit").attr('name', 'produit_'+nbCodeBarre);
				cellule.children(".quantite").attr('name', 'quantite_'+nbCodeBarre);
				cellule.children(".valeurCodeBarre").attr('name', 'code_'+nbCodeBarre);
				cellule.children(".valAttribut").each(function (e) {
					$(this).attr('name', 'caract_'+nbCodeBarre+'_'+nbCaract);
					nbCaract++;
				});
				cellule.children(".valeurCodeBarre").val('');
				tableau.append(ligne);
	
				ligne.hide(); // On le cache, ça sera la prochaine ligne qui sera afficher au prochain scan
				ligneCur.show(); // On affiche l'article qu'on vient de scanner
	
				$('.supprimer').unbind('click');
				$('.supprimer').click(supprimerLigne);
				$('.selectProduit').unbind('change');
				$('.selectProduit').change(onChangeSelect);
				
				$("#inputSubmit").attr("disabled", false); // On remet en service le boutton submit
	
				getArticleFromSoap(input.parent().parent()); // On récupère l'article depuis le SOAP pour afficher ces caractéristiques
			}
			else {
				 $("#contenneur_inventaire").show();
				 $("#chargement").hide();
			}
				 
		}, 220);
	}

    input.val(input.val()+ String.fromCharCode(e.which));
    return false;
});

/**
 * Permet de récupèrer un article complet depuis le SOAP.
 * @param ligne La ligne du tableau dont on veut les informations sur l'article.
 */
function getArticleFromSoap(ligne) {
	var cellule = ligne.children('td');
	var codeBarre = cellule.children(".valeurCodeBarre").val();

	$("#inputSubmit").attr("disabled", true); // Le temps du traitement on grise le bouton submit
	$.ajax({
		   url: '{{ path('imerir_ajax_inventaire_get_article_from_code_barre') }}',
		   data: {
		      codeBarre: codeBarre
		   },
		   success: function(data) {
			   var objJson = JSON.parse(data); // On parse les datas et on trouve le produit correspondant à l'article dans la liste.
			   var nomProduit = cellule.children(".selectProduit").children('option');
			   nomProduit.each(function (e) {
				   if ($(this).html() === objJson['nomProduit'])
					   $(this).attr("selected", true);
			   });

			   valeurCaracteristique = objJson.attributs; // Pour problème de concurences AJAX. Pour passer une variable à la fonction 'onChangeSelect' 

			   cellule.children(".selectProduit").trigger('change'); // On simule le fait que l'on veuille changer de produit pour mettre à jour les attributs
		   },
		   type: 'POST'
	});
}

$('.selectProduit').change(onChangeSelect); // Lorsqu'on change de produit, il faut mettre à jour les attributs

/**
 * Permet de mettre à jour les attributs lorsque l'on change le produit.
 */
function onChangeSelect() {
	var ligne = $(this).parent().parent(); // On recup le TR
	$("#inputSubmit").attr("disabled", true); // On grise le boutton submit le temps du traitement
	
	$.ajax({
		   url: '{{ path('imerir_ajax_inventaire_get_attribut') }}',
		   data: {
		      nom: $(this).val()
		   },
		   success: function(data) {
			   var objJson = JSON.parse(data); // On parse les data puis on affiche les attributs et les valeurs atribut correctement.
			   var celulle = ligne.children('td').last();
			   var numLigne = ligne.children('td').children('input').first().attr('name').split('_')[1];
			   var numValAttribut = 0; //< Le nombre de valeur attribut. Utilisé pour envoyé toutes les données en POST sans qu'elles aient le même nom
			   
			   celulle.html('');
			   
			   objJson.forEach(function (attr) {
				   celulle.append('<label for="caract_'+numLigne+'_'+numValAttribut+'">'+attr.nom+' : </label> ');
				   celulle.append('<div><select name="caract_'+numLigne+'_'+numValAttribut+'"></select><i class="fa fa-pencil-square modifier modifierAttribut"></i><input type="hidden" class="id_attribut" name="id" value="'+attr.id+'"></div><br/>');
				   var select = celulle.find('select').last();
				   for (valAttr in attr.valeurs) {
					   if (valeurCaracteristique !== null && valeurCaracteristique[attr.nom] === attr.valeurs[valAttr])
					   	  select.append('<option selected value="'+attr.nom+'_'+attr.valeurs[valAttr]+'">'+attr.valeurs[valAttr]+'</option>');
					   else 
						  select.append('<option value="'+attr.nom+'_'+attr.valeurs[valAttr]+'">'+attr.valeurs[valAttr]+'</option>');
				   }

				   celulle.append('<input type="hidden" class="id_attribut" name="id" value="'+attr.id+'">');
				   
				   if (celulle.children('select').html() == '') {
					   celulle.children('select').remove();
					   celulle.last().html('AUCUNE CARACTÉRISTIQUE');
				   }
				   
				   numValAttribut++;
			   });

			   $('.ajoutProduit').unbind('click');
			   $('.ajoutProduit').click(ajoutProduit); // On bind le clic sur bouton - avec la fonction de suppression
			   $('.modifierAttribut').unbind('click');
			   $('.modifierAttribut').click(modifierAttribut); // On bind le clic sur bouton modifer avec la modification d'attibut
			   
			   $("#contenneur_inventaire").show();
			   $("#chargement").hide();
			   ligne.effect( "highlight", {}, 3000 );
			   
			   valeurCaracteristique = null;
			   $("#inputSubmit").attr("disabled", false);
		   },
		   type: 'POST'
	});
}

$("#inputSubmit").attr("disabled", false); // Par défaut le bouton submit et accessible
</script>
{% endblock %}